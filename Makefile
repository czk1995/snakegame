#############################################################################
# Makefile for building: snake
# Generated by qmake (2.01a) (Qt 4.8.6) on: Thu Oct 18 13:59:45 2018
# Project:  snake.pro
# Template: app
# Command: /opt/qt-4.8.6/bin/qmake -o Makefile snake.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gnueabihf-gcc -lts
CXX           = arm-linux-gnueabihf-g++ -lts
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/qt-4.8.6/mkspecs/qws/linux-arm-gnueabihf-g++ -I. -I/opt/qt-4.8.6/include/QtCore -I/opt/qt-4.8.6/include/QtNetwork -I/opt/qt-4.8.6/include/QtGui -I/opt/qt-4.8.6/include -I.
LINK          = arm-linux-gnueabihf-g++ -lts
LFLAGS        = -Wl,-O1 -Wl,-rpath,/opt/qt-4.8.6/lib
LIBS          = $(SUBLIBS)  -L/opt/qt-4.8.6/lib -lQtGui -L/home/czk/QT/tslib-1.4/lib-arm/lib -L/opt/qt-4.8.6/lib -lQtNetwork -lQtCore -lpthread 
AR            = arm-linux-gnueabihf-ar cqs
RANLIB        = 
QMAKE         = /opt/qt-4.8.6/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-linux-gnueabihf-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		widget.cpp \
		gamewidget.cpp moc_widget.cpp \
		moc_gamewidget.cpp \
		qrc_image.cpp
OBJECTS       = main.o \
		widget.o \
		gamewidget.o \
		moc_widget.o \
		moc_gamewidget.o \
		qrc_image.o
DIST          = /opt/qt-4.8.6/mkspecs/common/unix.conf \
		/opt/qt-4.8.6/mkspecs/common/linux.conf \
		/opt/qt-4.8.6/mkspecs/common/gcc-base.conf \
		/opt/qt-4.8.6/mkspecs/common/gcc-base-unix.conf \
		/opt/qt-4.8.6/mkspecs/common/g++-base.conf \
		/opt/qt-4.8.6/mkspecs/common/g++-unix.conf \
		/opt/qt-4.8.6/mkspecs/common/qws.conf \
		/opt/qt-4.8.6/mkspecs/qconfig.pri \
		/opt/qt-4.8.6/mkspecs/features/qt_functions.prf \
		/opt/qt-4.8.6/mkspecs/features/qt_config.prf \
		/opt/qt-4.8.6/mkspecs/features/exclusive_builds.prf \
		/opt/qt-4.8.6/mkspecs/features/default_pre.prf \
		/opt/qt-4.8.6/mkspecs/features/release.prf \
		/opt/qt-4.8.6/mkspecs/features/default_post.prf \
		/opt/qt-4.8.6/mkspecs/features/shared.prf \
		/opt/qt-4.8.6/mkspecs/features/warn_on.prf \
		/opt/qt-4.8.6/mkspecs/features/qt.prf \
		/opt/qt-4.8.6/mkspecs/features/unix/thread.prf \
		/opt/qt-4.8.6/mkspecs/features/moc.prf \
		/opt/qt-4.8.6/mkspecs/features/resources.prf \
		/opt/qt-4.8.6/mkspecs/features/uic.prf \
		/opt/qt-4.8.6/mkspecs/features/yacc.prf \
		/opt/qt-4.8.6/mkspecs/features/lex.prf \
		/opt/qt-4.8.6/mkspecs/features/include_source_dir.prf \
		snake.pro
QMAKE_TARGET  = snake
DESTDIR       = 
TARGET        = snake

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: snake.pro  /opt/qt-4.8.6/mkspecs/qws/linux-arm-gnueabihf-g++/qmake.conf /opt/qt-4.8.6/mkspecs/common/unix.conf \
		/opt/qt-4.8.6/mkspecs/common/linux.conf \
		/opt/qt-4.8.6/mkspecs/common/gcc-base.conf \
		/opt/qt-4.8.6/mkspecs/common/gcc-base-unix.conf \
		/opt/qt-4.8.6/mkspecs/common/g++-base.conf \
		/opt/qt-4.8.6/mkspecs/common/g++-unix.conf \
		/opt/qt-4.8.6/mkspecs/common/qws.conf \
		/opt/qt-4.8.6/mkspecs/qconfig.pri \
		/opt/qt-4.8.6/mkspecs/features/qt_functions.prf \
		/opt/qt-4.8.6/mkspecs/features/qt_config.prf \
		/opt/qt-4.8.6/mkspecs/features/exclusive_builds.prf \
		/opt/qt-4.8.6/mkspecs/features/default_pre.prf \
		/opt/qt-4.8.6/mkspecs/features/release.prf \
		/opt/qt-4.8.6/mkspecs/features/default_post.prf \
		/opt/qt-4.8.6/mkspecs/features/shared.prf \
		/opt/qt-4.8.6/mkspecs/features/warn_on.prf \
		/opt/qt-4.8.6/mkspecs/features/qt.prf \
		/opt/qt-4.8.6/mkspecs/features/unix/thread.prf \
		/opt/qt-4.8.6/mkspecs/features/moc.prf \
		/opt/qt-4.8.6/mkspecs/features/resources.prf \
		/opt/qt-4.8.6/mkspecs/features/uic.prf \
		/opt/qt-4.8.6/mkspecs/features/yacc.prf \
		/opt/qt-4.8.6/mkspecs/features/lex.prf \
		/opt/qt-4.8.6/mkspecs/features/include_source_dir.prf \
		/opt/qt-4.8.6/lib/libQtGui.prl \
		/opt/qt-4.8.6/lib/libQtNetwork.prl \
		/opt/qt-4.8.6/lib/libQtCore.prl
	$(QMAKE) -o Makefile snake.pro
/opt/qt-4.8.6/mkspecs/common/unix.conf:
/opt/qt-4.8.6/mkspecs/common/linux.conf:
/opt/qt-4.8.6/mkspecs/common/gcc-base.conf:
/opt/qt-4.8.6/mkspecs/common/gcc-base-unix.conf:
/opt/qt-4.8.6/mkspecs/common/g++-base.conf:
/opt/qt-4.8.6/mkspecs/common/g++-unix.conf:
/opt/qt-4.8.6/mkspecs/common/qws.conf:
/opt/qt-4.8.6/mkspecs/qconfig.pri:
/opt/qt-4.8.6/mkspecs/features/qt_functions.prf:
/opt/qt-4.8.6/mkspecs/features/qt_config.prf:
/opt/qt-4.8.6/mkspecs/features/exclusive_builds.prf:
/opt/qt-4.8.6/mkspecs/features/default_pre.prf:
/opt/qt-4.8.6/mkspecs/features/release.prf:
/opt/qt-4.8.6/mkspecs/features/default_post.prf:
/opt/qt-4.8.6/mkspecs/features/shared.prf:
/opt/qt-4.8.6/mkspecs/features/warn_on.prf:
/opt/qt-4.8.6/mkspecs/features/qt.prf:
/opt/qt-4.8.6/mkspecs/features/unix/thread.prf:
/opt/qt-4.8.6/mkspecs/features/moc.prf:
/opt/qt-4.8.6/mkspecs/features/resources.prf:
/opt/qt-4.8.6/mkspecs/features/uic.prf:
/opt/qt-4.8.6/mkspecs/features/yacc.prf:
/opt/qt-4.8.6/mkspecs/features/lex.prf:
/opt/qt-4.8.6/mkspecs/features/include_source_dir.prf:
/opt/qt-4.8.6/lib/libQtGui.prl:
/opt/qt-4.8.6/lib/libQtNetwork.prl:
/opt/qt-4.8.6/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile snake.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/snake1.0.0 || $(MKDIR) .tmp/snake1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/snake1.0.0/ && $(COPY_FILE) --parents widget.h gamewidget.h .tmp/snake1.0.0/ && $(COPY_FILE) --parents image.qrc .tmp/snake1.0.0/ && $(COPY_FILE) --parents main.cpp widget.cpp gamewidget.cpp .tmp/snake1.0.0/ && (cd `dirname .tmp/snake1.0.0` && $(TAR) snake1.0.0.tar snake1.0.0 && $(COMPRESS) snake1.0.0.tar) && $(MOVE) `dirname .tmp/snake1.0.0`/snake1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/snake1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_widget.cpp moc_gamewidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_widget.cpp moc_gamewidget.cpp
moc_widget.cpp: gamewidget.h \
		widget.h
	/opt/qt-4.8.6/bin/moc $(DEFINES) $(INCPATH) widget.h -o moc_widget.cpp

moc_gamewidget.cpp: gamewidget.h
	/opt/qt-4.8.6/bin/moc $(DEFINES) $(INCPATH) gamewidget.h -o moc_gamewidget.cpp

compiler_rcc_make_all: qrc_image.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_image.cpp
qrc_image.cpp: image.qrc \
		img/headleft.png \
		img/tailright.png \
		img/GameBack.jpg \
		img/headright.png \
		img/Apple.png \
		img/leftup.png \
		img/down.png \
		img/headup.png \
		img/leftdown.png \
		img/up.png \
		img/left.png \
		img/headdown.png \
		img/downup.png \
		img/tailleft.png \
		img/right.png \
		img/rightup.png \
		img/tailup.png \
		img/leftright.png \
		img/taildown.png \
		img/rightdown.png \
		img/Start.png \
		img/taildown.png \
		img/Back2.jpg \
		img/WindowPicture.jpg \
		img/tailleft.png \
		img/tailright.png \
		img/Exit.png \
		img/Pause.png \
		img/tailup.png \
		img/Back.jpg
	/opt/qt-4.8.6/bin/rcc -name image image.qrc -o qrc_image.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

main.o: main.cpp widget.h \
		gamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

widget.o: widget.cpp widget.h \
		gamewidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o widget.o widget.cpp

gamewidget.o: gamewidget.cpp gamewidget.h \
		widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamewidget.o gamewidget.cpp

moc_widget.o: moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_widget.o moc_widget.cpp

moc_gamewidget.o: moc_gamewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_gamewidget.o moc_gamewidget.cpp

qrc_image.o: qrc_image.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_image.o qrc_image.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/root/ || $(MKDIR) $(INSTALL_ROOT)/home/root/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/home/root/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/home/root/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home/root/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home/root/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

